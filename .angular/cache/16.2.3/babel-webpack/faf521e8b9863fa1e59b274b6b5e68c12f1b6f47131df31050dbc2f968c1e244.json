{"ast":null,"code":"var _class;\nimport { environment } from '../../environments/environment.prod';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  getBooks() {\n    const url = environment.API_REST_URL + `/book`;\n    return this._httpClient.get(url);\n  }\n  getBooksFromCart() {\n    let listBook = JSON.parse(localStorage.getItem('listCartBook') || '');\n    if (listBook === null) {\n      listBook = [];\n    }\n    return listBook;\n  }\n  removeBooksFromCart() {\n    localStorage.setItem('listCartBook', '');\n  }\n  addBookToCart(book) {\n    let listBook = JSON.parse(localStorage.getItem('listCartBook') || '');\n    if (listBook === null) {\n      // Create a list with the book\n      book.amount = 1;\n      listBook = [book];\n    } else {\n      const index = listBook.findIndex(item => {\n        return book.id === item.id;\n      });\n      if (index !== -1 && index && listBook[index] && listBook[index].amount) {\n        listBook[index].amount += 1;\n      } else {\n        book.amount = 1;\n        listBook.push(book);\n      }\n    }\n    localStorage.setItem('listCartBook', JSON.stringify(listBook));\n    this._toastSuccess(book);\n  }\n  updateAmountBook(book) {\n    const listBookCart = this.getBooksFromCart();\n    const index = listBookCart.findIndex(item => {\n      return book.id === item.id;\n    });\n    if (index !== -1) {\n      listBookCart[index].amount = book.amount;\n      if (book.amount === 0) {\n        listBookCart.splice(index, 1);\n      }\n    }\n    localStorage.setItem('listCartBook', JSON.stringify(listBookCart));\n    return listBookCart;\n  }\n  _toastSuccess(book) {\n    const Toast = swal.mixin({\n      toast: true,\n      position: 'bottom-end',\n      showConfirmButton: false,\n      timer: 2000,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', swal.stopTimer);\n        toast.addEventListener('mouseleave', swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: book.name + ' added to cart'\n    });\n  }\n}\n_class = BookService;\n_class.ɵfac = function BookService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["environment","swal","BookService","constructor","_httpClient","getBooks","url","API_REST_URL","get","getBooksFromCart","listBook","JSON","parse","localStorage","getItem","removeBooksFromCart","setItem","addBookToCart","book","amount","index","findIndex","item","id","push","stringify","_toastSuccess","updateAmountBook","listBookCart","splice","Toast","mixin","toast","position","showConfirmButton","timer","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","name","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/Users/gabrielsuarez/Documents/dev/github/jest-testing/src/app/services/book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from '../models/book.model';\nimport { environment } from '../../environments/environment.prod';\n\nimport swal from 'sweetalert2';\n\n\n@Injectable()\nexport class BookService {\n\n  constructor(\n    private readonly _httpClient: HttpClient\n  ) { }\n\n  public getBooks(): Observable<Book[]> {\n    const url: string = environment.API_REST_URL + `/book`;\n    return this._httpClient.get<Book[]>(url);\n  }\n\n  public getBooksFromCart(): Book[] {\n    let listBook: Book[] = JSON.parse(localStorage.getItem('listCartBook')||'');\n    if (listBook === null) {\n      listBook = [];\n    }\n    return listBook;\n  }\n\n  public removeBooksFromCart(): void {\n    localStorage.setItem('listCartBook', '');\n  }\n\n  public addBookToCart(book: Book) {\n    let listBook: Book[] = JSON.parse(localStorage.getItem('listCartBook')||'');\n    if (listBook === null) { // Create a list with the book\n      book.amount = 1;\n      listBook = [ book ];\n    } else { \n      const index = listBook.findIndex((item: Book) => {\n        return book.id === item.id;\n      });\n      if (index !== -1 && index && listBook[index] && listBook[index].amount){\n        listBook[index].amount!+=1;\n      } else { \n        book.amount = 1;\n        listBook.push(book);\n      }\n    }\n    localStorage.setItem('listCartBook', JSON.stringify(listBook));\n    this._toastSuccess(book);\n  }\n\n  public updateAmountBook(book: Book): Book[] {\n    const listBookCart = this.getBooksFromCart();\n    const index = listBookCart.findIndex((item: Book) => {\n      return book.id === item.id;\n    });\n    if (index !== -1) {\n      listBookCart[index].amount = book.amount;\n      if (book.amount === 0) {\n        listBookCart.splice(index, 1);\n      }\n    }\n    localStorage.setItem('listCartBook', JSON.stringify(listBookCart));\n    return listBookCart;\n  }\n\n  private _toastSuccess(book: Book) {\n    const Toast = swal.mixin({\n      toast: true,\n      position: 'bottom-end',\n      showConfirmButton: false,\n      timer: 2000,\n      didOpen: (toast) => {\n        toast.addEventListener('mouseenter', swal.stopTimer);\n        toast.addEventListener('mouseleave', swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: book.name + ' added to cart'\n    });\n  }\n}\n"],"mappings":";AAKA,SAASA,WAAW,QAAQ,qCAAqC;AAEjE,OAAOC,IAAI,MAAM,aAAa;;;AAI9B,OAAM,MAAOC,WAAW;EAEtBC,YACmBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAC1B;EAEGC,QAAQA,CAAA;IACb,MAAMC,GAAG,GAAWN,WAAW,CAACO,YAAY,GAAG,OAAO;IACtD,OAAO,IAAI,CAACH,WAAW,CAACI,GAAG,CAASF,GAAG,CAAC;EAC1C;EAEOG,gBAAgBA,CAAA;IACrB,IAAIC,QAAQ,GAAWC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAE,EAAE,CAAC;IAC3E,IAAIJ,QAAQ,KAAK,IAAI,EAAE;MACrBA,QAAQ,GAAG,EAAE;;IAEf,OAAOA,QAAQ;EACjB;EAEOK,mBAAmBA,CAAA;IACxBF,YAAY,CAACG,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;EAC1C;EAEOC,aAAaA,CAACC,IAAU;IAC7B,IAAIR,QAAQ,GAAWC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAE,EAAE,CAAC;IAC3E,IAAIJ,QAAQ,KAAK,IAAI,EAAE;MAAE;MACvBQ,IAAI,CAACC,MAAM,GAAG,CAAC;MACfT,QAAQ,GAAG,CAAEQ,IAAI,CAAE;KACpB,MAAM;MACL,MAAME,KAAK,GAAGV,QAAQ,CAACW,SAAS,CAAEC,IAAU,IAAI;QAC9C,OAAOJ,IAAI,CAACK,EAAE,KAAKD,IAAI,CAACC,EAAE;MAC5B,CAAC,CAAC;MACF,IAAIH,KAAK,KAAK,CAAC,CAAC,IAAIA,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAAC,IAAIV,QAAQ,CAACU,KAAK,CAAC,CAACD,MAAM,EAAC;QACrET,QAAQ,CAACU,KAAK,CAAC,CAACD,MAAO,IAAE,CAAC;OAC3B,MAAM;QACLD,IAAI,CAACC,MAAM,GAAG,CAAC;QACfT,QAAQ,CAACc,IAAI,CAACN,IAAI,CAAC;;;IAGvBL,YAAY,CAACG,OAAO,CAAC,cAAc,EAAEL,IAAI,CAACc,SAAS,CAACf,QAAQ,CAAC,CAAC;IAC9D,IAAI,CAACgB,aAAa,CAACR,IAAI,CAAC;EAC1B;EAEOS,gBAAgBA,CAACT,IAAU;IAChC,MAAMU,YAAY,GAAG,IAAI,CAACnB,gBAAgB,EAAE;IAC5C,MAAMW,KAAK,GAAGQ,YAAY,CAACP,SAAS,CAAEC,IAAU,IAAI;MAClD,OAAOJ,IAAI,CAACK,EAAE,KAAKD,IAAI,CAACC,EAAE;IAC5B,CAAC,CAAC;IACF,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBQ,YAAY,CAACR,KAAK,CAAC,CAACD,MAAM,GAAGD,IAAI,CAACC,MAAM;MACxC,IAAID,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrBS,YAAY,CAACC,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC;;;IAGjCP,YAAY,CAACG,OAAO,CAAC,cAAc,EAAEL,IAAI,CAACc,SAAS,CAACG,YAAY,CAAC,CAAC;IAClE,OAAOA,YAAY;EACrB;EAEQF,aAAaA,CAACR,IAAU;IAC9B,MAAMY,KAAK,GAAG7B,IAAI,CAAC8B,KAAK,CAAC;MACvBC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,YAAY;MACtBC,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAGJ,KAAK,IAAI;QACjBA,KAAK,CAACK,gBAAgB,CAAC,YAAY,EAAEpC,IAAI,CAACqC,SAAS,CAAC;QACpDN,KAAK,CAACK,gBAAgB,CAAC,YAAY,EAAEpC,IAAI,CAACsC,WAAW,CAAC;MACxD;KACD,CAAC;IACFT,KAAK,CAACU,IAAI,CAAC;MACTC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAExB,IAAI,CAACyB,IAAI,GAAG;KACpB,CAAC;EACJ;;SAzEWzC,WAAW;;mBAAXA,MAAW,EAAA0C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX7C,MAAW;EAAA8C,OAAA,EAAX9C,MAAW,CAAA+C;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}